{"componentChunkName":"component---src-templates-docs-js","path":"/workspace-extension","result":{"data":{"markdownRemark":{"html":"<p class=\"sub-title\">This page is a step by step guide of the Last-Hit workspace extension.</p>\n<h1 id=\"concept\"><a href=\"#concept\" aria-label=\"concept permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Concept</h1>\n<p>Sometimes the captured data cannot be replayed for some reason, such as duplicate checks, date checks, different account in different environments etc.<br>\nWorkspace extension is designed for resolving these scenarios, provides strong and dynamic capability to extend around each flows and steps for those complex situations.</p>\n<h1 id=\"extension-points\"><a href=\"#extension-points\" aria-label=\"extension points permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Extension Points</h1>\n<p>There are 7 extension points,</p>\n<ul>\n<li><code class=\"language-text\">Environment Prepare</code></li>\n<li><code class=\"language-text\">Story Prepare</code></li>\n<li><code class=\"language-text\">Flow Should Start</code></li>\n<li><code class=\"language-text\">Step Should Start</code></li>\n<li><code class=\"language-text\">Step On Error</code></li>\n<li><code class=\"language-text\">Step Accomplished</code></li>\n<li><code class=\"language-text\">Flow Accomplished</code></li>\n</ul>\n<h1 id=\"prepare\"><a href=\"#prepare\" aria-label=\"prepare permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Prepare</h1>\n<h2 id=\"create-extension-package\"><a href=\"#create-extension-package\" aria-label=\"create extension package permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Create Extension Package</h2>\n<ul>\n<li>Find your workspace</li>\n<li>Create folder names <code class=\"language-text\">workspace-folder/.scripts</code>, under workspace root folder</li>\n<li>\n<p>Initialize it as a NPM package</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> init</code></pre></div>\n<blockquote>\n<p>Set package name as <code class=\"language-text\">a-demo</code>, just same as your workspace name.</p>\n</blockquote>\n</li>\n</ul>\n<p>It's done, exactly same as initialize a NPM package.</p>\n<h2 id=\"add-typescript\"><a href=\"#add-typescript\" aria-label=\"add typescript permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Add TypeScript</h2>\n<p>Typescript is optional.  </p>\n<ul>\n<li>\n<p>Install TypeScript</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> typescript</code></pre></div>\n</li>\n<li>\n<p>Create TypeScript configuration</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre style=\"counter-reset: linenumber 0\" class=\"language-json line-numbers\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n\t<span class=\"token property\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"es5\"</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token property\">\"module\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"commonjs\"</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token property\">\"moduleResolution\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"node\"</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token property\">\"sourceMap\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token property\">\"emitDecoratorMetadata\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token property\">\"experimentalDecorators\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token property\">\"removeComments\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token property\">\"noImplicitAny\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token property\">\"suppressImplicitAnyIndexErrors\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token property\">\"resolveJsonModule\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token property\">\"esModuleInterop\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token property\">\"strict\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token property\">\"outDir\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"dist\"</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token property\">\"exclude\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"node_modules\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n</li>\n<li>\n<p>Update <code class=\"language-text\">package.json</code></p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre style=\"counter-reset: linenumber 0\" class=\"language-json line-numbers\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n\t<span class=\"token property\">\"main\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"dist/index.js\"</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token property\">\"compile\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"tsc\"</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<blockquote>\n<p>We recommend TypeScript, and snippets in this guide are all written by TypeScript.</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"add-assertion-package\"><a href=\"#add-assertion-package\" aria-label=\"add assertion package permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Add Assertion Package</h2>\n<p>We use <code class=\"language-text\">expect.js</code> as assertion library, choose your favorite.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> expect.js @types/expect.js</code></pre></div>\n<h2 id=\"add-dependency\"><a href=\"#add-dependency\" aria-label=\"add dependency permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Add Dependency</h2>\n<p>Only one dependency is necessary.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> last-hit-workspace-extension</code></pre></div>\n<h1 id=\"using-the-extension-points\"><a href=\"#using-the-extension-points\" aria-label=\"using the extension points permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Using the Extension Points</h1>\n<p>We use conventions to name extension files, you can build your own imports and exports.</p>\n<h2 id=\"define-extension-entry-point\"><a href=\"#define-extension-entry-point\" aria-label=\"define extension entry point permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Define extension entry point</h2>\n<p>It's the entrypoint of extension package, extension files location needs to be defined in this file.</p>\n<p>Create file <code class=\"language-text\">workspace-folder/.scripts/index.ts</code>.<br>\nSimply appoint the handler location, the parent folder of all handlers.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre style=\"counter-reset: linenumber 0\" class=\"language-typescript line-numbers\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AbstractWorkspaceExtensionEntryPoint <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'last-hit-workspace-extension'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">WorkspaceExtensionEntryPoint</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">AbstractWorkspaceExtensionEntryPoint</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">getHandlerLocation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> __dirname<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WorkspaceExtensionEntryPoint</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id=\"environment-prepare\"><a href=\"#environment-prepare\" aria-label=\"environment prepare permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Environment Prepare</h2>\n<p>Update environment settings here.</p>\n<p>Create file <code class=\"language-text\">workspace-folder/.scripts/env-pepare.ts</code>.<br>\nChange the <code class=\"language-text\">sleepAfterChange</code> to 30ms and <code class=\"language-text\">slowAjaxTime</code> to 300ms.  </p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre style=\"counter-reset: linenumber 0\" class=\"language-typescript line-numbers\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> WorkspaceExtensions <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'last-hit-types'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span>\n\tevent<span class=\"token punctuation\">:</span> WorkspaceExtensions<span class=\"token punctuation\">.</span>EnvironmentPrepareEvent<span class=\"token punctuation\">,</span>\n\thelpers<span class=\"token punctuation\">:</span> WorkspaceExtensions<span class=\"token punctuation\">.</span>HandlerTestHelper\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>WorkspaceExtensions<span class=\"token punctuation\">.</span>PreparedEnvironment<span class=\"token operator\">></span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> env <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> event<span class=\"token punctuation\">;</span>\n\n\tenv<span class=\"token punctuation\">.</span>sleepAfterChange <span class=\"token operator\">=</span> <span class=\"token number\">30</span><span class=\"token punctuation\">;</span>\n\tenv<span class=\"token punctuation\">.</span>slowAjaxTime <span class=\"token operator\">=</span> <span class=\"token number\">300</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> env<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<blockquote>\n<p>Browser is not opened now.</p>\n</blockquote>\n<h2 id=\"story-prepare\"><a href=\"#story-prepare\" aria-label=\"story prepare permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Story Prepare</h2>\n<p>Prepare story level variables.</p>\n<p>Create file <code class=\"language-text\">workspace-folder/.scripts/my-first-story/story-prepare.ts</code>.  </p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre style=\"counter-reset: linenumber 0\" class=\"language-typescript line-numbers\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> WorkspaceExtensions <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'last-hit-types'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span>\n\tevent<span class=\"token punctuation\">:</span> WorkspaceExtensions<span class=\"token punctuation\">.</span>StoryPrepareEvent<span class=\"token punctuation\">,</span>\n\thelpers<span class=\"token punctuation\">:</span> WorkspaceExtensions<span class=\"token punctuation\">.</span>HandlerTestHelper\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>WorkspaceExtensions<span class=\"token punctuation\">.</span>PreparedStory<span class=\"token operator\">></span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">log from extension, get story prepare of story[</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>event<span class=\"token punctuation\">.</span>story<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">]</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> event<span class=\"token punctuation\">.</span>story<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<blockquote>\n<p><code class=\"language-text\">my-first-story</code> is story name.</p>\n</blockquote>\n<blockquote>\n<p>Browser is not opened now.</p>\n</blockquote>\n<blockquote>\n<p>Currently, only API is ready, but nothing can be changed here.  </p>\n</blockquote>\n<h2 id=\"flow-should-start\"><a href=\"#flow-should-start\" aria-label=\"flow should start permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Flow Should Start</h2>\n<p>Update flow parameters here.</p>\n<p>Create file <code class=\"language-text\">workspace-folder/.scripts/my-first-story/my-first-flow/flow-should-start.ts</code>.  </p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre style=\"counter-reset: linenumber 0\" class=\"language-typescript line-numbers\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> WorkspaceExtensions <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'last-hit-types'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span>\n\tevent<span class=\"token punctuation\">:</span> WorkspaceExtensions<span class=\"token punctuation\">.</span>FlowShouldStartEvent<span class=\"token punctuation\">,</span>\n\thelpers<span class=\"token punctuation\">:</span> WorkspaceExtensions<span class=\"token punctuation\">.</span>HandlerHelpers\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>WorkspaceExtensions<span class=\"token punctuation\">.</span>PreparedFlow<span class=\"token operator\">></span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> story<span class=\"token punctuation\">,</span> flow <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> event<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> params <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> flow<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">(</span>params <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">param</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>param<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> param<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span><span class=\"token punctuation\">,</span> param<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">(</span>flow <span class=\"token keyword\">as</span> WorkspaceExtensions<span class=\"token punctuation\">.</span>PreparedFlow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>_ <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\t\tinput<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n\t\t\tkey<span class=\"token punctuation\">:</span> <span class=\"token string\">'value'</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> flow<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<ul>\n<li>Get predefined parameters from <code class=\"language-text\">flow.params</code></li>\n<li>Predefined parameters can be <code class=\"language-text\">undefined</code></li>\n<li>\n<p>Each parameter has 3 properties: </p>\n<ul>\n<li><code class=\"language-text\">name</code>: name of parameter</li>\n<li><code class=\"language-text\">type</code>: <code class=\"language-text\">in</code>, <code class=\"language-text\">out</code> and <code class=\"language-text\">both</code><br>\n<code class=\"language-text\">both</code> means this parameter will be used both on input and output</li>\n<li><code class=\"language-text\">value</code>: default value of parameter, normally is empty string when not given</li>\n</ul>\n</li>\n<li>Simply returns given flow object if do nothing</li>\n<li>If no special parameter value given, replayer use predefined parameters definition</li>\n<li>\n<p>Attach your special parameter values on <code class=\"language-text\">flow._.input</code>, it's an object</p>\n<ul>\n<li><code class=\"language-text\">key</code>: parameter name</li>\n<li><code class=\"language-text\">value</code>: parameter value</li>\n<li>Type is not needed</li>\n<li>The predefined parameters definition should be ignored when <code class=\"language-text\">flow._.input</code> is declared and returned by this extension point</li>\n</ul>\n</li>\n</ul>\n<p>In this case, only one parameter <code class=\"language-text\">key: &#39;value&#39;</code> will be passed to replayer, no matter what defined in flow.<br>\nEven no predefined paramterer, input parameters still can be defined and passed to replayer here.</p>\n<blockquote>\n<p><code class=\"language-text\">my-first-story</code> is story name.<br>\n<code class=\"language-text\">my-first-flow</code> is flow name.</p>\n</blockquote>\n<blockquote>\n<p>Browser is not opened now.</p>\n</blockquote>\n<h2 id=\"step-should-start\"><a href=\"#step-should-start\" aria-label=\"step should start permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Step Should Start</h2>\n<p>Update step parameters here.</p>\n<p>Create file <code class=\"language-text\">workspace-folder/.scripts/my-first-story/my-first-flow/f6067c5d-f94d-4275-8263-1f33737b1b42/step-should-start.ts</code>.  </p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre style=\"counter-reset: linenumber 0\" class=\"language-typescript line-numbers\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> WorkspaceExtensions <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'last-hit-types'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span>\n\tevent<span class=\"token punctuation\">:</span> WorkspaceExtensions<span class=\"token punctuation\">.</span>StepShouldStartEvent<span class=\"token punctuation\">,</span>\n\thelpers<span class=\"token punctuation\">:</span> WorkspaceExtensions<span class=\"token punctuation\">.</span>HandlerHelpers\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>WorkspaceExtensions<span class=\"token punctuation\">.</span>PreparedStep<span class=\"token operator\">></span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> story<span class=\"token punctuation\">,</span> flow<span class=\"token punctuation\">,</span> step <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> event<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> browser<span class=\"token punctuation\">:</span> browserHelper <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> helpers<span class=\"token punctuation\">;</span>\n\t<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>\n\t\t<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">log from extension, get step should start of story[</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>story<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">], flow[</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>flow<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">], step[index=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>step<span class=\"token punctuation\">.</span>stepIndex<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">, stepUuid=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>step<span class=\"token punctuation\">.</span>stepUuid<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">]</span><span class=\"token template-punctuation string\">`</span></span>\n\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">const</span> value <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> browserHelper<span class=\"token punctuation\">.</span><span class=\"token function\">getElementAttrValue</span><span class=\"token punctuation\">(</span>\n\t\t<span class=\"token string\">'#some-id'</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token string\">'47792ef4-3a1e-4d27-9707-abc6fb77bb8b'</span>\n\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'value from browser operation'</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> step<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<ul>\n<li>Get flow parameters from <code class=\"language-text\">flow.params</code>, only input parameters are provided.</li>\n<li>Change step property value and return to replayer</li>\n<li><code class=\"language-text\">47792ef4-3a1e-4d27-9707-abc6fb77bb8b</code> is the page uuid, global unique. On step json, value of <code class=\"language-text\">uuid</code> property.</li>\n</ul>\n<p>In this case, try to get the value of name attribute from DOM node, which with id <code class=\"language-text\">some-id</code>.</p>\n<blockquote>\n<p><strong>DONOT</strong> change value of fixed properties, such as <code class=\"language-text\">uuid</code>, <code class=\"language-text\">type</code>, <code class=\"language-text\">stepUuid</code>, <code class=\"language-text\">stepIndex</code>, etc.</p>\n</blockquote>\n<blockquote>\n<p><code class=\"language-text\">my-first-story</code> is story name.<br>\n<code class=\"language-text\">my-first-flow</code> is flow name.<br>\n<code class=\"language-text\">f6067c5d-f94d-4275-8263-1f33737b1b42</code> is the step uuid, global unique. On step json, value of <code class=\"language-text\">stepUuid</code> property.</p>\n</blockquote>\n<blockquote>\n<p>On start step (the first step), browser is not opened now.<br>\nOn any other step, browser is opened now.</p>\n</blockquote>\n<h2 id=\"step-on-error\"><a href=\"#step-on-error\" aria-label=\"step on error permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Step On Error</h2>\n<p>Catch error raised on step replay, fix it or ignore.</p>\n<p>Create file <code class=\"language-text\">workspace-folder/.scripts/my-first-story/my-first-flow/f6067c5d-f94d-4275-8263-1f33737b1b42/step-on-error.ts</code>.  </p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre style=\"counter-reset: linenumber 0\" class=\"language-typescript line-numbers\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> WorkspaceExtensions <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'last-hit-types'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span>\n\tevent<span class=\"token punctuation\">:</span> WorkspaceExtensions<span class=\"token punctuation\">.</span>StepOnErrorEvent<span class=\"token punctuation\">,</span>\n\thelpers<span class=\"token punctuation\">:</span> WorkspaceExtensions<span class=\"token punctuation\">.</span>HandlerHelpers\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>WorkspaceExtensions<span class=\"token punctuation\">.</span>FixedStep<span class=\"token operator\">></span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> story<span class=\"token punctuation\">,</span> flow<span class=\"token punctuation\">,</span> step<span class=\"token punctuation\">,</span> error <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> event<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> browser<span class=\"token punctuation\">:</span> browserHelper <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> helpers<span class=\"token punctuation\">;</span>\n\t<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>step<span class=\"token punctuation\">,</span> _<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> fixed<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Replayer stops replaying when error raised. In this case, error caught by extension and ignored. Replayer will continue steps instead of stopping. Or returns given step to keep original replayer behaviour.</p>\n<blockquote>\n<p><code class=\"language-text\">my-first-story</code> is story name.<br>\n<code class=\"language-text\">my-first-flow</code> is flow name.<br>\n<code class=\"language-text\">f6067c5d-f94d-4275-8263-1f33737b1b42</code> is the step uuid, global unique. On step json, value of <code class=\"language-text\">stepUuid</code> property.</p>\n</blockquote>\n<blockquote>\n<p>Error raised on start step (the first step) doesn't trigger this extension point.</p>\n</blockquote>\n<blockquote>\n<p>Browser is opened now.</p>\n</blockquote>\n<h2 id=\"step-accomplished\"><a href=\"#step-accomplished\" aria-label=\"step accomplished permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Step Accomplished</h2>\n<p>Do assertion here.</p>\n<p>Create file <code class=\"language-text\">workspace-folder/.scripts/my-first-story/my-first-flow/f6067c5d-f94d-4275-8263-1f33737b1b42/step-accomplished.ts</code>.  </p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre style=\"counter-reset: linenumber 0\" class=\"language-typescript line-numbers\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> WorkspaceExtensions <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'last-hit-types'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> expect <span class=\"token keyword\">from</span> <span class=\"token string\">'expect.js'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span>\n\tevent<span class=\"token punctuation\">:</span> WorkspaceExtensions<span class=\"token punctuation\">.</span>StepAccomplishedEvent<span class=\"token punctuation\">,</span>\n\thelpers<span class=\"token punctuation\">:</span> WorkspaceExtensions<span class=\"token punctuation\">.</span>HandlerHelpers\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>WorkspaceExtensions<span class=\"token punctuation\">.</span>AccomplishedStep<span class=\"token operator\">></span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> story<span class=\"token punctuation\">,</span> flow<span class=\"token punctuation\">,</span> step <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> event<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> browser<span class=\"token punctuation\">:</span> browserHelper<span class=\"token punctuation\">,</span> test<span class=\"token punctuation\">:</span> testHelper <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> helpers<span class=\"token punctuation\">;</span>\n\t<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>\n\t\t<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">log from extension, get step accomplished of story[</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>story<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">], flow[</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>flow<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">], step[index=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>step<span class=\"token punctuation\">.</span>stepIndex<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">, stepUuid=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>step<span class=\"token punctuation\">.</span>stepUuid<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">]</span><span class=\"token template-punctuation string\">`</span></span>\n\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">await</span> testHelper<span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>\n\t\t<span class=\"token string\">'check name of element[#some-id] is [some-attr-value]'</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">></span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">const</span> value <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> browserHelper<span class=\"token punctuation\">.</span><span class=\"token function\">getElementAttrValue</span><span class=\"token punctuation\">(</span>\n\t\t\t\t<span class=\"token string\">'#some-id'</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">'47792ef4-3a1e-4d27-9707-abc6fb77bb8b'</span>\n\t\t\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">.</span><span class=\"token function\">be</span><span class=\"token punctuation\">(</span><span class=\"token string\">'some-attr-value'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">await</span> testHelper<span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>\n\t\t<span class=\"token string\">'check value of element[#some-id]'</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">></span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">await</span> testHelper<span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>\n\t\t\t\t<span class=\"token string\">'should be 你好'</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">></span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\t\t\t\t\t<span class=\"token keyword\">const</span> value <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> browserHelper<span class=\"token punctuation\">.</span><span class=\"token function\">getElementPropValue</span><span class=\"token punctuation\">(</span>\n\t\t\t\t\t\t<span class=\"token string\">'#some-id'</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t<span class=\"token string\">'value'</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t<span class=\"token string\">'47792ef4-3a1e-4d27-9707-abc6fb77bb8b'</span>\n\t\t\t\t\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">.</span><span class=\"token function\">be</span><span class=\"token punctuation\">(</span><span class=\"token string\">'some-prop-value'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>step<span class=\"token punctuation\">,</span> _<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> passed<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<ul>\n<li>Do assertion with your favorite library.</li>\n<li>Throw error when assertion failed</li>\n<li>Error will be caught by <code class=\"language-text\">Test Helper</code></li>\n<li>Any assertion success and failure will be collected by replayer</li>\n<li>No <code class=\"language-text\">Step On Error</code> to handle the error thrown by this.</li>\n</ul>\n<blockquote>\n<p><code class=\"language-text\">my-first-story</code> is story name.<br>\n<code class=\"language-text\">my-first-flow</code> is flow name.<br>\n<code class=\"language-text\">f6067c5d-f94d-4275-8263-1f33737b1b42</code> is the step uuid, global unique. On step json, value of <code class=\"language-text\">stepUuid</code> property.</p>\n</blockquote>\n<blockquote>\n<p>Browser is opened now.</p>\n</blockquote>\n<h2 id=\"flow-accomplished\"><a href=\"#flow-accomplished\" aria-label=\"flow accomplished permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Flow Accomplished</h2>\n<p>Build output here.</p>\n<p>Create file <code class=\"language-text\">workspace-folder/.scripts/my-first-story/my-first-flow/flow-accomplished.ts</code>.  </p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre style=\"counter-reset: linenumber 0\" class=\"language-typescript line-numbers\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> WorkspaceExtensions <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'last-hit-types'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span>\n\tevent<span class=\"token punctuation\">:</span> WorkspaceExtensions<span class=\"token punctuation\">.</span>FlowAccomplishedEvent<span class=\"token punctuation\">,</span>\n\thelpers<span class=\"token punctuation\">:</span> WorkspaceExtensions<span class=\"token punctuation\">.</span>HandlerHelpers\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span>WorkspaceExtensions<span class=\"token punctuation\">.</span>AccomplishedFlow<span class=\"token operator\">></span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> story<span class=\"token punctuation\">,</span> flow <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> event<span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token punctuation\">(</span>flow <span class=\"token keyword\">as</span> WorkspaceExtensions<span class=\"token punctuation\">.</span>AccomplishedFlow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>_ <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\t\toutput<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n\t\t\tkey<span class=\"token punctuation\">:</span> <span class=\"token string\">'value'</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> flow<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<ul>\n<li>Get predefined &#x26; input parameters from <code class=\"language-text\">flow.params</code></li>\n<li>\n<p>Each parameter has 3 properties: </p>\n<ul>\n<li><code class=\"language-text\">name</code>: name of parameter</li>\n<li><code class=\"language-text\">type</code>: <code class=\"language-text\">in</code>, <code class=\"language-text\">out</code> and <code class=\"language-text\">both</code><br>\n<code class=\"language-text\">both</code> means this parameter will be used both on input and output</li>\n<li><code class=\"language-text\">value</code>: default value of parameter, normally is empty string when not given</li>\n</ul>\n</li>\n<li>Simply returns given flow object if no output parameter is needed</li>\n<li>If no special parameter value given, replayer use predefined parameters definition</li>\n<li>\n<p>Attach your special parameter values on <code class=\"language-text\">flow._.output</code>, it's an object</p>\n<ul>\n<li><code class=\"language-text\">key</code>: parameter name</li>\n<li><code class=\"language-text\">value</code>: parameter value</li>\n<li>Type is not needed</li>\n<li>The predefined parameters definition should be ignored when <code class=\"language-text\">flow._.output</code> is declared and returned by this extension point</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p><code class=\"language-text\">my-first-story</code> is story name.<br>\n<code class=\"language-text\">my-first-flow</code> is flow name.  </p>\n</blockquote>\n<blockquote>\n<p>Output is ignored in IDE.</p>\n</blockquote>\n<blockquote>\n<p>Browser is opened now.</p>\n</blockquote>\n<h1 id=\"compile-extension-package\"><a href=\"#compile-extension-package\" aria-label=\"compile extension package permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Compile Extension Package</h1>\n<p>Exactly same as plain typescript package.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> run compile</code></pre></div>\n<blockquote>\n<p>Always keep your extension package compiled. IDE and CI don't compile automatically.<br>\nES5 or any syntax supported by NodeJS also works here.</p>\n</blockquote>\n<h1 id=\"keep-data-in-workspace-extension\"><a href=\"#keep-data-in-workspace-extension\" aria-label=\"keep data in workspace extension permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Keep Data in Workspace Extension</h1>\n<p>It's OK if you keep data in workspace extension, data can be shared between steps.</p>\n<blockquote>\n<p><strong>DONOT</strong> share data between flows or storys. Workspace extension is reloaded for each single flow to avoid data impact. If there is any data must be passed from one flow to another, by flow output parameters.</p>\n</blockquote>\n<h1 id=\"assertion-collecting\"><a href=\"#assertion-collecting\" aria-label=\"assertion collecting permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Assertion Collecting</h1>\n<p>Only error of assertion are caught. If you catch the exception by yourself and doesn't re-throw it, test helper ignores it and treat it as passed.</p>\n<h1 id=\"helpers\"><a href=\"#helpers\" aria-label=\"helpers permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Helpers</h1>\n<h2 id=\"broswer-helper\"><a href=\"#broswer-helper\" aria-label=\"broswer helper permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Broswer Helper</h2>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre style=\"counter-reset: linenumber 0\" class=\"language-typescript line-numbers\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> browser<span class=\"token punctuation\">:</span> browserHelper <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> helpers<span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<blockquote>\n<p>No browser helper passed if no browser opened at extension point.</p>\n</blockquote>\n<p>Currently there are 3 methods are provided by browser helper.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre style=\"counter-reset: linenumber 0\" class=\"language-typescript line-numbers\"><code class=\"language-typescript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">IWorkspaceExtensionBrowserHelper</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">getElementAttrValue</span><span class=\"token punctuation\">(</span>\n\t\tcsspath<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>\n\t\tattrName<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>\n\t\tpageUuid<span class=\"token operator\">?</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span>\n\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">getElementPropValue</span><span class=\"token punctuation\">(</span>\n\t\tcsspath<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>\n\t\tpropName<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span>\n\t\tpageUuid<span class=\"token operator\">?</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span>\n\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">isInIDE</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<blockquote>\n<p>Get value from first page if no page uuid passed.</p>\n</blockquote>\n<h2 id=\"test-helper\"><a href=\"#test-helper\" aria-label=\"test helper permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Test Helper</h2>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre style=\"counter-reset: linenumber 0\" class=\"language-typescript line-numbers\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> test<span class=\"token punctuation\">:</span> testHelper <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> helpers<span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>Only one method <code class=\"language-text\">test</code> is provided by test helper.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre style=\"counter-reset: linenumber 0\" class=\"language-typescript line-numbers\"><code class=\"language-typescript\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">IWorkspaceExtensionTestHelper</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">test</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token function-variable function\">fn</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">this</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>","tableOfContents":"<ul>\n<li><a href=\"/workspace-extension/#concept\">Concept</a></li>\n<li><a href=\"/workspace-extension/#extension-points\">Extension Points</a></li>\n<li>\n<p><a href=\"/workspace-extension/#prepare\">Prepare</a></p>\n<ul>\n<li><a href=\"/workspace-extension/#create-extension-package\">Create Extension Package</a></li>\n<li><a href=\"/workspace-extension/#add-typescript\">Add TypeScript</a></li>\n<li><a href=\"/workspace-extension/#add-assertion-package\">Add Assertion Package</a></li>\n<li><a href=\"/workspace-extension/#add-dependency\">Add Dependency</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/workspace-extension/#using-the-extension-points\">Using the Extension Points</a></p>\n<ul>\n<li><a href=\"/workspace-extension/#define-extension-entry-point\">Define extension entry point</a></li>\n<li><a href=\"/workspace-extension/#environment-prepare\">Environment Prepare</a></li>\n<li><a href=\"/workspace-extension/#story-prepare\">Story Prepare</a></li>\n<li><a href=\"/workspace-extension/#flow-should-start\">Flow Should Start</a></li>\n<li><a href=\"/workspace-extension/#step-should-start\">Step Should Start</a></li>\n<li><a href=\"/workspace-extension/#step-on-error\">Step On Error</a></li>\n<li><a href=\"/workspace-extension/#step-accomplished\">Step Accomplished</a></li>\n<li><a href=\"/workspace-extension/#flow-accomplished\">Flow Accomplished</a></li>\n</ul>\n</li>\n<li><a href=\"/workspace-extension/#compile-extension-package\">Compile Extension Package</a></li>\n<li><a href=\"/workspace-extension/#keep-data-in-workspace-extension\">Keep Data in Workspace Extension</a></li>\n<li><a href=\"/workspace-extension/#assertion-collecting\">Assertion Collecting</a></li>\n<li>\n<p><a href=\"/workspace-extension/#helpers\">Helpers</a></p>\n<ul>\n<li><a href=\"/workspace-extension/#broswer-helper\">Broswer Helper</a></li>\n<li><a href=\"/workspace-extension/#test-helper\">Test Helper</a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"date":"December 19, 2019","path":"/workspace-extension","title":"Workspace Extension","author":"last-hit-aab"}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}}